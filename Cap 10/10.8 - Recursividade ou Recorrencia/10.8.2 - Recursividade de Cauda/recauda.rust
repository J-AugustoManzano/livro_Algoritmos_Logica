/*
 * Livro .....: Algoritmos
 *              Logica para Desenvolvimento de Programacao de
 *              Computadores
 * Autores ...: Jose Augusto N. G. Manzano
 *              Jayr Figueiredo de Oliveira
 * Editora ...: Erica
 *
 * Capitulo ..: 10 - Topico 10.8
 *
 * Programa ..: FUNCAO COM RECURSIVDADE DE CAUDA
 */

use std::io::{self, Write};

fn fatorial_base(n: u16, p: u64) -> u64 {
    if n == 0 {
        p
    } else {
        fatorial_base(n - 1, n as u64 * p)
    }
}

fn fatorial(n: u16) -> u64 {
    fatorial_base(n, 1)
}

fn main() {
  
    let mut limite = String::new();

    println!("CALCULO DE FATORIAL");
    println!("RECURSIVIDADE DE CAUDA\n");

    print!("Qual fatorial (1-20): ");
    let _ = io::stdout().flush();
    let _ = io::stdin().read_line(&mut limite);
    let limite: u16 = limite.trim().parse().unwrap();

    println!("Fatorial = {}", fatorial(limite));
  
}
