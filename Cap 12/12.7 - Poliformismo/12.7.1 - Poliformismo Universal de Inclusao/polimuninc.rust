/*
 * Livro .....: Algoritmos
 *              Logica para Desenvolvimento de Programacao de
 *              Computadores
 * Autores ...: Jose Augusto N. G. Manzano
 *              Jayr Figueiredo de Oliveira
 * Editora ...: Erica
 *
 * Capitulo ..: 12 - Topico 12.7
 * 
 * Programa ..: POLIFORMISMO UNIVERSAL DE INCLUSAO
 * 
 */

trait Executavel 
{
  fn executar(&self);
}

struct ClsPai;

impl Executavel for ClsPai 
{
  fn executar(&self) 
  {
    println!("Acao executada na classe-pai");
  }
}

struct ClsFilho;

impl Executavel for ClsFilho 
{
  fn executar(&self) 
  {
    println!("Acao executada na classe-filho");
  }
}

fn main() 
{
  let pai = ClsPai;
  let filho = ClsFilho;
  let mut ptr_pai: &dyn Executavel;

  pai.executar();
  
  filho.executar();

  ptr_pai = &filho; // PAI ← FILHO
  
  ptr_pai.executar();

  ptr_pai = &pai; // PAI ← ""
  
  ptr_pai.executar();
}
