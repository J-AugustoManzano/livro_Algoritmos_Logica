/*
 * Livro .....: Algoritmos
 *              Logica para Desenvolvimento de Programacao de
 *              Computadores
 * Autores ...: Jose Augusto N. G. Manzano
 *              Jayr Figueiredo de Oliveira
 * Editora ...: Erica
 *
 * Capitulo ..: 7 - Topico 7.4
 * 
 * Programa ..: MATRIZ DINAMICA
 * 
 */

use std::io::{self, Write};
use std::ptr;

fn main() {
  
    let n: usize;
    let mut a: Vec<Vec<u8>>;

    println!("MATRIZ DINAMICA\n");

    print!("Entre a quantidade de elementos da matriz: ");
    io::stdout().flush().unwrap();
    let mut input = String::new();
    io::stdin().read_line(&mut input).unwrap();
    n = input.trim().parse().unwrap();
    println!();

    // Ajuste da matriz para quantidade solicitada
    a = vec![vec![0; 256]; n];

    for i in 0..n {
        print!("Entre o {:3}o. nome: ", i + 1);
        io::stdout().flush().unwrap();
        let mut input = String::new();
        io::stdin().read_line(&mut input).unwrap();
        let name = input.trim().bytes().collect::<Vec<u8>>();
        unsafe {
            ptr::copy_nonoverlapping(
                name.as_ptr(),
                a[i].as_mut_ptr(),
                name.len().min(256),
            );
        }
    }

    println!();
    println!("Foram fornecidos os nomes:");
    println!();

    for i in 0..n {
        let name = unsafe {
            let len = a[i].iter().position(|&x| x == 0).unwrap_or(256);
            String::from_utf8_unchecked(a[i][..len].to_vec())
        };
        println!("Nome {:3} = {}", i + 1, name);
    }

    // Liberar a memoria alocada
    drop(a);
  
}
