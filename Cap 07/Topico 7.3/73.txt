Material do tópico 7.3.
=======================

--------------------------------
- Pesquisa Sequencial Numérica -
--------------------------------

programa PESQUISA_SEQUENCIAL_NÚMERO

var
  NÚMERO : conjunto[1..10] de INTEIRO
  I, PESQ, RESP : inteiro
  ACHA : lógico

início

  para I de 1 até 10 passo 1 faça
    leia NÚMERO[I]
  fim_para

  // *** início do trecho de pesquisa sequencial ***

  RESP ← "SIM"
  enquanto (RESP = "SIM") faça
    escreva "Entre o número a ser pesquisado: " 
    leia PESQ
    I ← 1
    ACHA ← .Falso.
    enquanto (I <= 10) .e. (ACHA = .Falso.) faça
      se (PESQ = NÚMERO[I]) então
        ACHA ← .Verdadeiro.
      senão
        I ← I + 1
      fim_se
    fim_enquanto
    se (ACHA = .Verdadeiro.) então
      escreva PESQ, " foi localizado na posição ", I
    senão
      escreva PESQ, " não foi localizado"
    fim_se
    escreva "Deseja continuar? (SIM/NÃO): " 
    leia RESP
  fim_enquanto

  // *** fim do trecho de pesquisa sequencial ***

fim

------------------------------------
- Pesquisa Sequencial Alfanumérica -
------------------------------------

programa PESQUISA_SEQUENCIAL_NOME

var
  NOME : conjunto[1..10] de cadeia
  I : inteiro
  PESQ, RESP : cadeia
  ACHA : lógico
início

  para I de 1 até 10 passo 1 faça
    leia NOME[I]
  fim_para

  // *** início do trecho de pesquisa sequencial ***

  RESP ← "SIM"
  enquanto (RESP = "SIM") faça
    escreva "Entre o nome a ser pesquisado: " 
    leia PESQ
    I ← 1
    ACHA ← .Falso.
    enquanto (I <= 10) .e. (ACHA = .Falso.) faça
      se (PESQ = NOME[I]) então
        ACHA ← .Verdadeiro.
      senão
        I ← I + 1
      fim_se
    fim_enquanto
    se (ACHA = .Verdadeiro.) então
      escreva PESQ, " foi localizado na posição ", I
    senão
      escreva PESQ, " não foi localizado"
    fim_se
    escreva "Deseja continuar? (SIM/NÃO): " 
    leia RESP
  fim_enquanto

  // *** fim do trecho de pesquisa sequencial ***

fim

-----------------------------
- Pesquisa Binária Numérica -
-----------------------------

programa PESQUISA_BINÁRIA_NÚMERO

var
  NÚMERO : conjunto[1..10] de inteiro
  I, J, COMEÇO, FINAL, MEIO, PESQ, X : inteiro
  RESP : cadeia
  ACHA : lógico

início

  para I de 1 até 10 passo 1 faça
    leia NÚMERO[I]
  fim_para

  // *** início trecho de classificação ***

  para I de 1 até 9 passo 1 faça
    para J de I + 1 até 10 passo 1 faça
      se (NÚMERO[I] > NÚMERO [J]) então
        X ← NÚMERO[I]
        NÚMERO[I] ← NÚMERO[J]
        NÚMERO[J] ← X
      fim_se
    fim_para
  fim_para

  // *** fim trecho de classificação ***

  // *** início trecho de pesquisa binária ***

  RESP ← "SIM"
  enquanto (RESP = "SIM") faça
    escreva "Entre o nome a ser pesquisado: " 
    leia PESQ
    COMEÇO ← 1
    FINAL ← 10
    ACHA ← .Falso.
    enquanto (COMEÇO <= FINAL) .e. (ACHA = .Falso.) faça
      MEIO ← (COMEÇO + FINAL) div 2
      se (PESQ = NÚMERO[MEIO]) então
        ACHA ← .Verdadeiro.
      senão
        se (PESQ < NÚMERO[MEIO]) então
          FINAL ← MEIO – 1
        senão
          COMEÇO ← MEIO + 1
        fim_se
      fim_se
    fim_enquanto
    se (ACHA = .Verdadeiro.) então
      escreva PESQ, " foi localizado na posição ", MEIO
    senão
      escreva PESQ, " não foi localizado"
    fim_se
    escreva "Deseja continuar? (SIM/NÃO): " 
    leia RESP
  fim_enquanto

  // *** fim trecho de pesquisa binária ***

fim

---------------------------------
- Pesquisa Binária Alfanumérica -
---------------------------------

programa PESQUISA_BINÁRIA_NOME

var
  NOME : conjunto[1..10] de cadeia
  I, J, COMEÇO, FINAL, MEIO : inteiro
  PESQ, RESP, X : cadeia
  ACHA : lógico

início

  para I de 1 até 10 passo 1 faça
    leia NOME[I]
  fim_para

  // *** início trecho de classificação ***

  para I de 1 até 9 passo 1 faça
    para J de I + 1 até 10 passo 1 faça
      se (NOME[I] > NOME[J]) então
        X ← NOME[I]
        NOME[I] ← NOME[J]
        NOME[J] ← X
      fim_se
    fim_para
  fim_para

  // *** fim trecho de classificação ***

  // *** início trecho de pesquisa binária ***

  RESP ← "SIM"
  enquanto (RESP = "SIM") faça
    escreva "Entre o nome a ser pesquisado: " 
    leia PESQ
    COMEÇO ← 1
    FINAL ← 10
    ACHA ← .Falso.
    enquanto (COMEÇO <= FINAL) .e. (ACHA = .Falso.) faça
      MEIO ← (COMEÇO + FINAL) div 2
      se (PESQ = NOME[MEIO]) então
        ACHA ← .Verdadeiro.
      senão
        se (PESQ < NOME[MEIO]) então
          FINAL ← MEIO – 1
        senão
          COMEÇO ← MEIO + 1
        fim_se
      fim_se
    fim_enquanto
    se (ACHA = .Verdadeiro.) então
      escreva PESQ, " foi localizado na posição ", MEIO
    senão
      escreva PESQ, " não foi localizado"
    fim_se
    escreva "Deseja continuar? (SIM/NÃO): " 
    leia RESP
  fim_enquanto

  // *** fim trecho de pesquisa binária ***

fim

